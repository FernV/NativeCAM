[SUBROUTINE]
icon = probe-down.png
name = Probe Grid
image = probe-down.png
type = probe-array
help = 	<b>Probe Array of Points on stock</b>
 and save to a file
order = act h1 fn depth rev dx dy dir

[PARAM_ACT]
name = Active
type = bool
value = 1

[PARAM_FN]
name = File name
type = string
tool_tip = Enter file name to save to
value = probe-results.txt
header = h1

[PARAM_H1]
name = Probing and offsets
type = sub-header

[PARAM_DX]
name = dX
type = float
icon = dx.png
tool_tip = X offset
value = 0.25
metric_value = 6
minimum_value = 0.0
header = h1

[PARAM_DY]
name = dY
type = float
icon = dy.png
tool_tip = Y offset
value = 0.25
metric_value = 6
minimum_value = 0.0
header = h1

[PARAM_DIR]
name = Master
type = combo
tool_tip = Master axis to follow
value = 0
options = X axis=0:Y axis=1
header = h1

[PARAM_DEPTH]
name = Depth
type = float
icon = height.png
tool_tip = Maximum depth
value = -0.3
metric_value = -5
header = h1

[PARAM_REV]
name = Reverse latch dir
type = bool
icon = height.png
value = 0
header = h1

[DEFINITIONS]
content =
;	<eval>self.include_once("probe.ngc")</eval>

[CALL]
content =
	(begin #sub_name)
	(probe array author : Fernand Veilleux)
	o<#self_id_active> if [#param_act]
		o<#self_id_rev0> if [#param_rev]
			#<_probe_latch> = -#<_probe_latch>
		o<#self_id_rev0> endif
		
		(probeopen,#param_fn)
		o<#self_id_ax> if [#param_dir]
			#<probe_Y> = [#<wp_front> + #param_dy / 2]
			o<#self_id_Y_loop> while [#<probe_Y> LT #<wp_rear>]
				#<probe_X> = [#<wp_left> + #param_dx / 2]
				o<#self_id_X_loop> while [#<probe_X> LT #<wp_right>]
					G0 Z[#<_z_clear>]
					G0 X#<probe_X> Y#<probe_Y>
					G0 Z[#<surface> + #<_rapid_z>]
					o<probe> call [0] [0] [#param_depth]
					#<probe_X> = [#<probe_X> + #param_dx]
				o<#self_id_X_loop> endwhile
				#<probe_Y> = [#<probe_Y> + #param_dy]
			o<#self_id_Y_loop> endwhile
			
		o<#self_id_ax> else
			#<probe_X> = [#<wp_left> + #param_dx / 2]
			o<#self_id_X_loop1> while [#<probe_X> LT #<wp_right>]
				#<probe_Y> = [#<wp_front> + #param_dy / 2]
				o<#self_id_Y_loop1> while [#<probe_Y> LT #<wp_rear>]
					G0 Z[#<_z_clear>]
					G0 X#<probe_X> Y#<probe_Y>
					G0 Z[#<surface> + #<_rapid_z>]
					o<probe> call [0] [0] [#param_depth]
					#<probe_Y> = [#<probe_Y> + #param_dy]
				o<#self_id_Y_loop1> endwhile
				#<probe_X> = [#<probe_X> + #param_dx]
			o<#self_id_X_loop1> endwhile
		o<#self_id_ax> endif
		(probeclose)
		G0 Z[#<_z_clear>]
		
		o<#self_id_rev1> if [#param_rev]
			#<_probe_latch> = -#<_probe_latch>
		o<#self_id_rev1> endif		
	o<#self_id_active> endif
	(end #sub_name)
